<Window x:Class="Storm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:this="clr-namespace:Storm"
        xmlns:model="clr-namespace:Storm.Model">

    <Window.Style>
        <Style TargetType="{x:Type this:MainWindow}">
            <Setter Property="Title" Value="Storm" />
            <Setter Property="AutomationProperties.Name" Value="Storm" />
            <Setter Property="AutomationProperties.HelpText" Value="Be notified when a live stream starts" />
            <Setter Property="Top" Value="50" /> <!--see code-behind where we set MaxHeight-->
            <Setter Property="Left" Value="150" />
            <Setter Property="Width" Value="350" />
            <Setter Property="ShowInTaskbar" Value="True" />
            <Setter Property="ResizeMode" Value="CanMinimize" />
            <Setter Property="WindowStyle" Value="SingleBorderWindow" />
            <Setter Property="SizeToContent" Value="Height" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStopCollection>
                            <GradientStop Color="Black" Offset="0.0" />
                            <GradientStop Color="Black" Offset="0.0" />
                            <GradientStop Color="Black" Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type this:MainWindow}">
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <AdornerDecorator>
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                            </AdornerDecorator>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Custom">
                                    <VisualState x:Name="Stable" />
                                    <VisualState x:Name="Updating">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="Border"
                                                             Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                                             From="0.0" To="1.0" Duration="0:0:1" AutoReverse="True" />
                                            <ColorAnimation Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                            From="Black" To="White" Duration="0:0:0" />
                                            <ColorAnimation Storyboard.TargetName="Border"
                                                            Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                            From="Black" To="White" Duration="0:0:0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

    <Window.InputBindings>
        <KeyBinding x:Name="ExitCommandKeyBinding"
                    Key="Escape"
                    Command="{Binding Path=ExitCommand, Mode=OneTime}" />
        <KeyBinding x:Name="UpdateAllAsyncCommandKeyBinding"
                    Key="F5"
                    Command="{Binding Path=UpdateAllAsyncCommand, Mode=OneTime}" />
        <KeyBinding x:Name="OpenUrlsFileCommandKeyBinding"
                    Key="F11"
                    Command="{Binding Path=OpenUrlsFileCommand, Mode=OneTime}" />
        <KeyBinding x:Name="ReloadUrlsAsyncCommandKeyBinding"
                    Key="F12"
                    Command="{Binding Path=ReloadUrlsAsyncCommand, Mode=OneTime}" />
    </Window.InputBindings>

    <Window.Resources>
        <CollectionViewSource x:Key="sortedStreams"
                              Source="{Binding Path=Streams}"
                              IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="IsLive" Direction="Descending" />
                <scm:SortDescription PropertyName="DisplayName" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>

    <!--<ItemsControl Margin="0,0,0,7"-->
    <ItemsControl Margin="0,0,0,0"
                  Name="items"                 
                  Focusable="False"
                  ItemsSource="{Binding Source={StaticResource sortedStreams}}">

        <ItemsControl.Template>
            <ControlTemplate>
                <ScrollViewer CanContentScroll="True"
                              Focusable="False">
                    <ItemsPresenter />
                </ScrollViewer>
            </ControlTemplate>
        </ItemsControl.Template>

        <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
                <VirtualizingStackPanel Margin="7,0,7,7" />
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>

        <ItemsControl.ItemTemplate>
            <DataTemplate DataType="{x:Type model:StreamBase}">
                <DataTemplate.Resources>
                    <this:LiveColorConverter x:Key="liveColorConverter"
                                             Online="{StaticResource Online}"
                                             Offline="{StaticResource Offline}"
                                             Default="{StaticResource Default}" />
                </DataTemplate.Resources>

                <Grid Background="{Binding Path=IsLive, Mode=OneWay, Converter={StaticResource liveColorConverter}}"
                      Margin="0,7,0,0"
                      Height="50">
                    
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>

                    <Rectangle Grid.Column="0"
                               Width="5"
                               Fill="Transparent"
                               Focusable="True"
                               KeyUp="go_KeyUp"
                               FocusVisualStyle="{x:Null}"> <!--this removes the hashed outline-->
                        <Rectangle.Triggers>
                            <EventTrigger RoutedEvent="GotKeyboardFocus">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Fill.Color"
                                                        Duration="0"
                                                        To="White" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="LostKeyboardFocus">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Fill.Color"
                                                        Duration="0"
                                                        To="Transparent" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Rectangle.Triggers>
                    </Rectangle>

                    <Label Grid.Column="1"
                           Focusable="False"
                           ToolTipService.InitialShowDelay="510"
                           ToolTipService.ShowDuration="3000"
                           ToolTipService.HasDropShadow="True"
                           ToolTipService.VerticalOffset="5"
                           ToolTipService.HorizontalOffset="10">
                        <Label.Content>
                            <TextBlock Text="{Binding Path=DisplayName}"
                                       TextTrimming="CharacterEllipsis" />
                        </Label.Content>
                        <Label.ToolTip>
                            <ToolTip>
                                <TextBlock DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}"
                                           Text="{Binding Path=MouseOverTooltip}"
                                           FontSize="14" />
                            </ToolTip>
                        </Label.ToolTip>
                        <Label.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick"
                                          Command="{Binding Path=DataContext.GoToStreamCommand, RelativeSource={RelativeSource AncestorType={x:Type this:MainWindow}}}"
                                          CommandParameter="{Binding}" />
                        </Label.InputBindings>
                    </Label>

                    <Image Grid.Column="2"
                           Width="20"
                           Height="20"
                           Source="{Binding Path=Icon, Mode=OneTime}" />
                </Grid>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</Window>